# -*- coding: utf-8 -*-
"""
Created on Tue Jan 28 21:40:07 2020

@author: 60407
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt; plt.rcdefaults()
import matplotlib.pyplot as plt


fre_m = np.load('Anpy');
sm_m = np.load('best_similary_np.npy');

AA=['A','R','N','D','C','Q','E','G','H','I','L','K','M','F','P','S','T','W','Y','V']

smi_mr = pd.DataFrame(data=sm_m[0:,0:],    # values
            index=AA,    # 1st column as index
            columns=AA)  # 1st row as the column names
 
all_score = []; #stores all the total similarity score generated by two trained matrix
#smallDataSet = data; #get the first few rows of the big data set.
data={}
windows = 'E:\Research\\'
mac = '/Users/FareedMabrouk/Desktop/Explore/Work/GEMSEC/PyTorch/Binding-Affinity-Prediction/'
ubuntu1 = '/home/gromacs/Desktop/Binding-Affinity-Prediction/'
ubuntu2 = '/home/jonathan/Desktop/Binding-Affinity-Prediction/'
dirname = windows
for i in [1,2,3]:
    data['set'+str(i)]=pd.read_csv(dirname+'A020'+str(1)+'.csv', engine='python')
    data['set'+str(i)].set_index('sequence',inplace=True)
    # data['set'+str(i)]['Total']=data['set'+str(i)]['CE']+data['set'+str(i)]['CP1']+data['set'+str(i)]['CP2']+data['set'+str(i)]['CP3']
    # data['set'+str(i)]=data['set'+str(i)][data['set'+str(i)].Total>=4]
all_seq = pd.concat([data['set1'], data['set2'], data['set3']]) 

#
oneSeq_sum = 0
for row in all_seq.iterrows():
    AA_seqen = row[0]; #get sequence
    counterRowFre = 0;
    oneSeq_sum = 0;
    
    for amino_acid in AA_seqen:  #loop through one sequence. ex. For MACI, get M , A , C , I
        targetCompare = smi_mr[amino_acid]; #get all similarity score to the acid. ex. A to A, B to A, C to A
        counterColumnFre = 0;
        oneAcidSum = 0;
        for x in np.nditer(targetCompare): #for each score, multiply it by its position frequency factor and add it to the sum.
            oneAcidSum = oneAcidSum + x*fre_m[counterRowFre][counterColumnFre];
            counterColumnFre = counterColumnFre + 1;
        counterRowFre += 1;
        oneSeq_sum += oneAcidSum;
    oneSeq_sum = round(oneSeq_sum, 5); #round the sum to ... digits
    all_score.append(oneSeq_sum); #store all scores into a array for plotting


#the following is ploting each Total Similarity Score to its Occurence.
x = all_seq['pMeas'].tolist();
y= all_score;
# plotting the points  
plt.ylabel('Total_Similarity_Score');
plt.xlabel("pMeas");
plt.title('RESULT');
plt.scatter(x,y)
plt.show()
